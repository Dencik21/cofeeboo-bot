import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiohttp import web
from aiogram.client.default import DefaultBotProperties

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = os.getenv("BOT_TOKEN", "8426171093:AAH9_v8WdYARjcfoRnkKC4_3QZnQWU93H2A")
PORT = int(os.environ.get("PORT", 8080))  # Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç —Å–≤–æ–π –ø–æ—Ä—Ç

logging.basicConfig(level=logging.INFO)

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê ===
bot = Bot(BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# === –ö–û–ú–ê–ù–î–ê /start ===
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Cofeeboo</b> ‚òï\n\n"
        "üëâ <a href='https://cofeeboo-bot-production.up.railway.app'>–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</a>",
        disable_web_page_preview=True
    )

# === –û–ë–†–ê–ë–û–¢–ö–ê –í–ï–ë–•–£–ö–ê ===
async def handle(request):
    data = await request.json()
    logging.info(f"üì© update: {data}")
    update = types.Update.model_validate(data, context={"bot": bot})
    await dp.feed_update(bot, update)
    return web.Response(text="ok")

# === –ü–†–û–°–¢–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –î–õ–Ø –ü–†–û–í–ï–†–ö–ò ===
async def index(request):
    return web.Response(text="‚òï Cofeeboo bot is running!", content_type="text/html")

# === –°–¢–ê–†–¢/–û–°–¢–ê–ù–û–í–ö–ê ===
async def on_startup(app):
    webhook_url = "https://cofeeboo-bot-production.up.railway.app/webhook"
    await bot.set_webhook(webhook_url, drop_pending_updates=True)
    logging.info(f"üåç Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")

async def on_shutdown(app):
    await bot.delete_webhook()
    await bot.session.close()

# === –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ===
def main():
    app = web.Application()
    app.router.add_post("/webhook", handle)
    app.router.add_get("/", index)

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    # Railway –¥–æ–ª–∂–µ–Ω —É–≤–∏–¥–µ—Ç—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç
    port = int(os.environ.get("PORT", 8080))
    logging.info(f"üöÄ Starting server on port {port} ...")

    try:
        web.run_app(app, host="0.0.0.0", port=port)
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == "__main__":
    # –î–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    try:
        main()
    except Exception as e:
        logging.error(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
